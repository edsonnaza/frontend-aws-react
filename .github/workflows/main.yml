name: 'Terraform CI/CD Pipeline with S3 Deployment'

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform Plan and Apply'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Step 3: Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      # Step 4: Plan Terraform
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tfplan
          terraform show -no-color tfplan > plan.txt
        working-directory: ./terraform

      # Step 5: Upload Terraform Plan as Artifact
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: ./terraform/tfplan

      - name: Upload Terraform Plan Text
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-text
          path: ./terraform/plan.txt

      # Step 6: Apply Terraform
      - name: Terraform Apply
        if: success()  # Only apply if the plan was successful
        run: terraform apply -auto-approve -input=false tfplan
        working-directory: ./terraform

  deploy:
    name: 'Deploy Application to AWS S3'
    needs: terraform
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: npm ci

      # Step 4: Build the App
      - name: Build the App
        run: npm run build

      # Step 5: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 6: Deploy to S3
      - name: Deploy to AWS S3 Bucket
        run: aws s3 sync ./dist s3://react-demo-app-2024 --delete
